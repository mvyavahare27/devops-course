package com.cg.dao;

import javax.transaction.HeuristicMixedException;
import javax.transaction.HeuristicRollbackException;
import javax.transaction.RollbackException;
import javax.transaction.SystemException;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.AfterThrowing;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.EnableAspectJAutoProxy;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class AspectTest {
	@Autowired
	private EmployeeDao employeeDao;
	
	@Autowired
	private SessionFactory sessionFactoryBean;
	
	@Pointcut("execution(* EmployeeDao.*(..))")  
	/*@Pointcut("execution(* EmployeeDao.create*(..))")*///This point cut only for create Method
	public void create(){}
	
	@Before("create()")
	public void displayBefore(){
		
		System.out.println("AOP Start");
		Session session = sessionFactoryBean.openSession();
		Transaction tx = session.beginTransaction();
		System.out.println("connection start");
		
	}
	
	/*@After("create()")
	public void displayAfter(){
		
		System.out.println("AOP Finish");
		
	}
	
	@AfterReturning("create()")
	public void displayAfterReturning() {
		tx.commit();
		session.close();
		System.out.println("Query run successfully");
	}
	
	@AfterThrowing("create()") //It is a Advaice
	public void displayError(JoinPoint jp){
		System.out.println("Method signature "+jp.getSignature());
		System.out.println("AOP failed");
	}*/
	

}
